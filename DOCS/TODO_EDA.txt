EDA

Breu descripcio de les estructures de dades i algoritmes utilitzats per a implementar les funcionalitats principals.

Algorismes utilitzats:

A la classe Maquina, hem usat l'algorisme de minimax amb podes alfa-beta per a calcular el següent moviment de la màquina.

L'aplicació de l'algorisme de minimax a aquest problema concret (calcular la següent jugada a un problema d'escacs) és
òbvia ja que els escacs són un joc amb adversari (dos jugadors) i d'informació perfecte, cas que s'adequa perfectament als
requisits del minimax.

La idea de l'algorisme és buscar el millor moviment suposant que el contrincant escollirà el pitjor per a tu.

D'aquesta manera els passos de l'algorisme són:

1. Generar l'arbre: es generen tots els nodes fins a arribar a un node terminal (o haver assolit la maxima profunditat)

2. Assignar un valor als nodes terminals

3. Propagar els valors cap els nodes superiors, triant major o menor d'entre els fills segons el node sigui del jugador
maximal o no (nodes alternats).

4. Escollir la jugada mirant els valors del nivell superior

El problema de l'algorisme del minimax tal qual és que el pas 1 acostuma a ser massa complex, particularment en el cas
dels escacs és impossible generar tot l'arbre de possibles moviments, per evitar aquesta complexitat hem introduit al nostre
algorisme podes alfa-beta que té com a objectiu descartar nodes que ja sabem que no són bons i per tant reduir el tamany
de l'arbre de cerca.

La idea de les podes alfa-beta és que l'algorisme manté dos valors, alfa i beta, que representen el valor mínim que sabem
que el jugador maximal pot assolir i el màxim valor que el jugador minimal té assegurat assolir, respectivament. Si en
algún moment de l'exploració l'alfa supera la beta, el jugador maximal pot descartar aquest node i la branca que el descendeix.

A la M1 tenim una heurística molt simple, que retorna el pitjor valor possible en cas de que l'última jugada feta sigui mat

//TODO buscar que un problema te solucio

--------------------------------------------

Estructures de dades:

Veig millor dir que hem usat tipus complexes com sets i arraylist i explicar que són explicar que també hem fet arrays normals i tal no?

A la classe Color s'usa una enum.

A la classe Peca i les que l'extenen (Rei, Reina, Torre, Cavall, Alfil i Peó) s'usen tipus bàsics i un objecte Color.

A la classe Tauler, usem una matriu de Peces (de tamany 8x8, com el tauler) per representar-lo i també guardem els
moviments relatius a un array d'arrays (de tamany 16x2), a més de dos objectes Peca i tipus bàsics.

A la classe EstadistiquesPartida s'usen tipus bàsics i un objecte Color.

A la classe Ranking s'usen tipus bàsics s'usa un array d'un parell de String i un tipus genèric T.

A la classe PuntuacioProblema s'usen tipus bàsics

A la classe Problema s'usen tipus bàscis i un Ranking de PuntuacioProblema

A la classe Partida s'usen tipus bàsics, un Array de Moviment, un objecte Color, un objecte Problema i un objecte Tauler

A la classe Moviment s'usen dos pairs d'enters i dos objectes tipus peca

A la classe Usuari s'usen tipus bàsics, un Set i un objecte EstadistiquesJugadors

A la classe FenTranslator s'usa un array d'arrays









